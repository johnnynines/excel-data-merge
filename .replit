modules = ["python-3.11"]

[nix]
channel = "stable-24_05"

[deployment]
deploymentTarget = "autoscale"
run = ["streamlit", "run", "app.py", "--server.port", "5000"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Streamlit Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "PyQt Application"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "CLI Demo"

[[workflows.workflow]]
name = "Streamlit Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "streamlit run app.py --server.port 5000"
waitForPort = 5000

[[workflows.workflow]]
name = "PyQt Application"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python excel_extractor_qt.py"

[[workflows.workflow]]
name = "CLI Demo"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"This is a demo of how to use the command-line version. The actual application needs a ZIP file with Excel files to process.\" && echo \"\" && echo \"Example usage:\" && echo \"python excel_extractor_cli.py example.zip output.xls\""

[[ports]]
localPort = 5000
externalPort = 80
